package jenkins.plugins.logstash.persistence;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.nio.file.Files;
import java.nio.file.Paths;

import net.sf.json.JSONObject;

import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.fail;

import com.cloudbees.syslog.sender.UdpSyslogMessageSender;

public class SyslogDaoTestIT{
  SyslogDao dao;
  String data = "{ 'junit': 'SyslogDaoTest' }";
  String host = "localhost";
  String appname = "jenkins:";
  int port = 514;
  UdpSyslogMessageSender udpSyslogMessageSender = new UdpSyslogMessageSender();
 	  
  @Before
  public void before() throws Exception {  
    dao = createDao(host, port, null, null, null);
  }

  // Send a real Syslog message to Logstash.
  @Test
  public void syslogSendRFC3164UDP() throws Exception {

	PrintWriter writer = null;
	String logmessage = null;
	String logfile = "target/logs/syslog-test.log";
	  
    // Clean up the the logstash log file
    try {
      writer = new PrintWriter(logfile);
    }
    catch (FileNotFoundException e){
      fail("Unable to clean up the logstash log file: " + e.getMessage());
    }
    finally {
      if (writer != null) { 
        writer.close(); 
      }
    }
    
    // Send the syslog message  
    dao.setSyslogFormat("RFC3164");
    dao.push(data);
    
    // Give 2 seconds for logstash to process the message
    Thread.sleep(2000);
    
    // Check the logfile generated by logstash
    try {
      String logcontent = new String(Files.readAllBytes(Paths.get(logfile)));
      JSONObject logjson = JSONObject.fromObject(logcontent);
      logmessage = logjson.get("message").toString();
    }
    catch (Exception e){
      fail("Unable to find any logstash generated data: " + e.getMessage());
    }
    
    assertEquals(" @cee: " + data, logmessage);  
    
  }
  
  SyslogDao createDao(String host, int port, String key, String username, String password) {
    return new SyslogDao(udpSyslogMessageSender, host, port, key, username, password);
  }
  
}
